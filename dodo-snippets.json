{
	"Do Export Default as Named Module": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_exdas",
		"body": ["export { default as ${0} } from '${1}';"],
		"description": "Do Export Default as Named Module snippet"
	},
	"Do Export Named Module": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_exn",
		"body": ["export { ${0} } from '${1}';"],
		"description": "Do Export Named Module snippet"
	},
	"Do Export All Named Modules": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_exall",
		"body": ["export * from '${0}';"],
		"description": "Do Export All Named Modules snippet"
	},
	"Do React Component Default Export": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rcde",
		"body": [
			"export default function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}({}) {",
			"  return <div>${0:$TM_FILENAME_BASE}</div>;",
			"}"
		],
		"description": "Do React Component with default export snippet"
	},
	"Do React Component Export": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rce",
		"body": [
			"export function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}({}) {",
			"  return <div>${0:$TM_FILENAME_BASE}</div>;",
			"}"
		],
		"description": "Do React Component with export snippet"
	},
	"Do React ForwardRef Component Default Export": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rfcde",
		"body": [
			"import { forwardRef } from 'react';",
			"",
			"function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}({}, ref) {",
			"  return <div ref={ref}>${0:$TM_FILENAME_BASE}</div>;",
			"}",
			"",
			"export default forwardRef(${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}});"
		],
		"description": "Do React ForwardRef Component with default export snippet"
	},
	"Do React ForwardRef Component Export": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rfce",
		"body": [
			"import { forwardRef } from 'react';",
			"",
			"function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}({}, ref) {",
			"  return <div ref={ref}>${0:$TM_FILENAME_BASE}</div>;",
			"}",
			"",
			"export forwardRef(${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}});"
		],
		"description": "Do React ForwardRef Component with export snippet"
	},
	"Do React Hook Default Export": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rhde",
		"body": ["export default function ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}() {", "  return ${0:null};", "}"],
		"description": "Do React Hook with default export snippet"
	},
	"Do React Hook Export": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rhe",
		"body": ["export function ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}() {", "  return ${0:null};", "}"],
		"description": "Do React Hook with export snippet"
	},
	"Do React HOC Default Export": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rhocde",
		"body": [
			"export default function ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}(Component) {",
			"  return function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}(props) {",
			"    return (<Component {...props} />);",
			"  }",
			"}"
		],
		"description": "Do React HOC with default export snippet"
	},
	"Do React HOC Export": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rhoce",
		"body": [
			"export function ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}(Component) {",
			"  return function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}(props) {",
			"    return (<Component {...props} />);",
			"  }",
			"}"
		],
		"description": "Do React HOC with export snippet"
	},
	"Do React Optimized Context": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_roctx",
		"body": [
			"import { createContext, useState, useContext, useCallback } from 'react';",
			"",
			"const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}StateContext = createContext(null);",
			"const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}UpdaterContext = createContext(null);",
			"",
			"function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Provider({ children }) {",
			"  const [${1:state}, set${2:State}] = useState(${0:null});",
			"",
			"  return (",
			"    <${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}StateContext.Provider value={${1:state}}>",
			"      <${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}UpdaterContext.Provider value={set${2:State}}>",
			"        {children}",
			"      </${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}UpdaterContext.Provider>",
			"    </${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}StateContext.Provider>",
			"  );",
			"}",
			"",
			"function use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}State() {",
			"  const contextState = useContext(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}StateContext);",
			"  if (typeof contextState === 'undefined') {",
			"    throw new Error('use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}State must be used within a ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Provider');",
			"  }",
			"  return contextState;",
			"}",
			"",
			"function use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Updater() {",
			"  const contextUpdater = useContext(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}UpdaterContext);",
			"  if (typeof contextUpdater === 'undefined') {",
			"    throw new Error('use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Updater must be used within a ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Provider');",
			"  }",
			"  return useCallback(contextUpdater, [contextUpdater]);",
			"}",
			"",
			"function use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}() {",
			"  return [use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}State(), use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Updater()];",
			"}",
			"",
			"export { ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Provider, use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} };"
		],
		"description": "Do React Optimized Context snippet"
	},
	"Do React Context": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rctx",
		"body": [
			"import { createContext, useState, useContext } from 'react';",
			"",
			"const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Context = createContext(null);",
			"",
			"function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Provider({ children }) {",
			"  const [${1:state}, set${2:State}] = useState(${0:null});",
			"",
			"  return (",
			"    <${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Context.Provider value={[${1:state}, set${2:State}]}>",
			"      {children}",
			"    </${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Context.Provider>",
			"  );",
			"}",
			"",
			"function use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}() {",
			"  const context = useContext(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Context);",
			"  if (typeof context === 'undefined') {",
			"    throw new Error('use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} must be used within a ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Provider');",
			"  }",
			"  return context;",
			"}",
			"",
			"export { ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Provider, use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} };"
		],
		"description": "Do React Context snippet"
	},
	"Do React Reducer": {
		"scope": "javascript, typescript, javascriptreact, typescriptreact",
		"prefix": "do_rrdc",
		"body": [
			"import { useReducer } from 'react';",
			"",
			"const ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_ACTION_TYPES = Object.freeze({",
			"  INCREMENT: 'INCREMENT',",
			"  DECREMENT: 'DECREMENT',",
			"  MESSAGE_SET: 'MESSAGE_SET',",
			"  MESSAGE_CLEAR: 'MESSAGE_CLEAR',",
			"  STATE_RESET: 'STATE_RESET',",
			"});",
			"",
			"const ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}InitialState = Object.freeze({",
			"  count: 0,",
			"  message: null,",
			"});",
			"",
			"function ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}Reducer(state, action) {",
			"  switch (action.type) {",
			"    case ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_ACTION_TYPES.INCREMENT: {",
			"      return {",
			"        ...state,",
			"        count: state.count + 1",
			"      };",
			"    }",
			"    case ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_ACTION_TYPES.DECREMENT: {",
			"      return {",
			"        ...state,",
			"        count: state.count - 1",
			"      };",
			"    }",
			"    case ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_ACTION_TYPES.MESSAGE_SET: {",
			"      return {",
			"        ...state,",
			"        message: action.payload",
			"      };",
			"    }",
			"    case ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_ACTION_TYPES.MESSAGE_CLEAR: {",
			"      return {",
			"        ...state,",
			"        message: null",
			"      };",
			"    }",
			"    case ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_ACTION_TYPES.STATE_RESET: {",
			"      return ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}InitialState;",
			"    }",
			"    default: {",
			"      throw new Error(`Invalid action type ${action.type}`);",
			"    }",
			"  }",
			"};",
			"",
			"function use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}(init) {",
			"  return useReducer(${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}Reducer, ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}InitialState, init);",
			"}",
			"",
			"export { ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}Reducer, use${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}, ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}InitialState, ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_ACTION_TYPES };"
		],
		"description": "Do React Reducer snippet"
	}
}
